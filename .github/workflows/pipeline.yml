# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD

on:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region }}

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "::set-output name=environment::$ENVIRONMENT"
        
    - name: Deploy to Amplify Console with CloudFormation
      id: amplify-stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ steps.env-name.outputs.environment }}
        template: stack.yaml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          Name=${{ steps.env-name.outputs.environment }},
          Repository=https://github.com/${{ github.repository }},
          OauthToken=${{ secrets.AMPLIFY_TOKEN }},
          Domain=${{ secrets.AMPLIFY_DOMAIN }}
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
  
    - name: Run Lint
      run: npm run lint
      
    - name: Run test
      run: npm run test -- --watchAll=false
    
    - name: Run build
      run: npm run build 
